// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Qs",
            "email": "quanangel@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/login/index": {
            "get": {
                "description": "Login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth-Token",
                        "name": "Auth-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller._returnLoginGet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller._returnError"
                        }
                    }
                }
            },
            "put": {
                "description": "Login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cpatcha",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cpatcha_md5",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "last_ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller._returnLoginPut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller._returnError"
                        }
                    }
                }
            }
        },
        "/admin/nav/index": {
            "get": {
                "description": "admin nav",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nav"
                ],
                "summary": "Nav",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth-Token",
                        "name": "Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search: type is only the search is id, type is list the search is id/name/url",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type: list、only",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/controller._returnNavGetList"
                        }
                    },
                    "2": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/controller._returnNavGetOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller._returnError"
                        }
                    }
                }
            },
            "put": {
                "description": "admin nav",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nav"
                ],
                "summary": "Nav",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth-Token",
                        "name": "Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pid",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status: 1normal、2disable",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller._returnSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nav"
                ],
                "summary": "Nav",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth-Token",
                        "name": "Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pid",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "status: 1normal、2disable",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller._returnSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller._returnError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller._returnError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 1
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "controller._returnLoginGet": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "last_ip": {
                            "description": "last ip",
                            "type": "string",
                            "example": "127.0.0.1"
                        },
                        "last_time": {
                            "description": "last time",
                            "type": "string",
                            "example": "1234567890"
                        },
                        "nickname": {
                            "description": "nick name",
                            "type": "string",
                            "example": "nickname"
                        },
                        "register_time": {
                            "description": "register time",
                            "type": "string",
                            "example": "1234567890"
                        },
                        "username": {
                            "description": "user name",
                            "type": "string",
                            "example": "username"
                        }
                    }
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "controller._returnLoginPut": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "description": "token",
                    "type": "string",
                    "example": "token"
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "controller._returnNavGetList": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "description": "data",
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AdminNav"
                            }
                        },
                        "limit": {
                            "description": "limit",
                            "type": "integer",
                            "example": 20
                        },
                        "page": {
                            "description": "page",
                            "type": "integer",
                            "example": 1
                        },
                        "total": {
                            "description": "total",
                            "type": "integer",
                            "example": 100
                        }
                    }
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "controller._returnNavGetOnly": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "description": "data",
                    "$ref": "#/definitions/models.AdminNav"
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "controller._returnSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer",
                    "example": 0
                },
                "msg": {
                    "description": "message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.AdminNav": {
            "type": "object",
            "properties": {
                "addTime": {
                    "description": "add time",
                    "type": "integer"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "pid": {
                    "description": "pid",
                    "type": "integer"
                },
                "status": {
                    "description": "status: 1normal、2disable",
                    "type": "integer"
                },
                "updateTime": {
                    "description": "udpate time",
                    "type": "integer"
                },
                "url": {
                    "description": "url",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "NowQS Farme Admin Api",
	Description: "This is Api Document",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
